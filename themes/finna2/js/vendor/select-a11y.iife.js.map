{"version":3,"file":"select-a11y.iife.js","sources":["../src/select-a11y.js"],"sourcesContent":["import \"./select-a11y.scss\";\n\nconst text = {\n  help: 'Utilisez la tabulation (ou les touches flèches) pour naviguer dans la liste des suggestions',\n  placeholder: 'Rechercher dans la liste',\n  noResult: 'Aucun résultat',\n  results: '{x} suggestion(s) disponibles',\n  deleteItem: 'Supprimer {t}',\n  delete: 'Supprimer',\n  clear: 'Vider',\n};\n\nconst matches = Element.prototype.matches;\nlet closest = Element.prototype.closest;\n\nif (!closest) {\n  closest = function (s) {\n    var el = this;\n\n    do {\n      if (matches.call(el, s)) return el;\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  };\n}\n\nconst DEEP_CLONE = true;\nconst SILENTLY = false;\n\n/**\n * Deep copy of an {@link Iterable} as {@link Array}\n * @template {HTMLElement} T\n * @param {Iterable<T>} array\n * @returns {Array<T>}\n */\nfunction deepCopy (array) {\n  return /** @type {Array<T>} */ (Array.from(array).map(option => option.cloneNode(DEEP_CLONE)));\n}\n\nfunction preserveOptgroupAsData (option) {\n  if (option.parentNode.tagName === 'OPTGROUP') {\n    option.dataset.group = option.parentNode.label\n  }\n  return option\n}\n\nexport class Select {\n  /**\n   * @param {HTMLSelectElement} el - Select HTML element\n   * @param {object} [options] - options to control select-a11y behavior\n   * @param {object} [options.text] - texts used in the class\n   * @param {string} [options.text.help] - helper text used for assistive technologies\n   * @param {string} [options.text.placeholder] - search input placeholder\n   * @param {string} [options.text.noResult] - text shown when there is no option\n   * @param {string} [options.text.results] - text to show the number of results available for assistive technologies\n   * @param {string} [options.text.deleteItem] - text used as title for \"x\" close button for selected option (see options.showSelected below)\n   * @param {string} [options.text.delete] - text used for assistive technologies for the \"x\" close button for selected option (see options.showSelected below)\n   * @param {string} [options.text.clear] - text used for assistive technologies for the \"x\" clear button for clearable single select (see options.clearable below)\n   * @param {FillSuggestions} [options.fillSuggestions] - fill suggestions based on search input content\n   * @param {boolean} [options.showSelected=true] - show selected options for multiple select\n   * @param {boolean} [options.useLabelAsButton=false] - use label as button even for single select.\n   * Only work if select value is set to `null` otherwise its value defaults to first option.\n   * @param {boolean} [options.clearable=false] - show clear icon for single select.\n   * Only work if select value is set. It resets it to `null`.\n   */\n  constructor(el, options) {\n\n    /** @type {HTMLSelectElement} */\n    this.el = el;\n\n    /** @type {HTMLLabelElement | null} */\n    this.label = document.querySelector(`label[for=${el.id}]`);\n\n    this.id = el.id;\n    this.open = false;\n    this.multiple = this.el.multiple;\n    this.search = '';\n\n    /** @type {Array<HTMLElement>} */\n    this.suggestions = [];\n\n    this.focusIndex = null;\n\n    const passedOptions = Object.assign({}, options);\n    const textOptions = Object.assign({}, text, passedOptions.text);\n    delete passedOptions.text;\n    this._defaultSearch = this._defaultSearch.bind(this);\n\n    this._options = Object.assign({\n      text: textOptions,\n      showSelected: true,\n      fillSuggestions: this._defaultSearch,\n      useLabelAsButton: false,\n      clearable: false,\n    }, passedOptions);\n\n    this._handleFocus = this._handleFocus.bind(this);\n    this._handleInput = this._handleInput.bind(this);\n    this._handleKeyboard = this._handleKeyboard.bind(this);\n    this._handleOpener = this._handleOpener.bind(this);\n    this._handleClear = this._handleClear.bind(this);\n    this._handleReset = this._handleReset.bind(this);\n    this._handleSuggestionClick = this._handleSuggestionClick.bind(this);\n    this._positionCursor = this._positionCursor.bind(this);\n    this._removeOption = this._removeOption.bind(this);\n    this.setText = this.setText.bind(this);\n    this._setButtonText = this._setButtonText.bind(this);\n\n    if(!this.multiple) {\n      const hasSelectedOption = Array.from(this.el.options).some(option => option.selected);\n      if (this._options.useLabelAsButton && !hasSelectedOption) {\n        const option = document.createElement('option');\n        option.innerText = this.label?.innerText ?? \"\";\n        option.setAttribute('value', '');\n        option.setAttribute('selected', 'selected');\n        option.setAttribute('disabled', 'disabled');\n        option.setAttribute('hidden', 'hidden');\n        this.el.options.add(option, 0);\n      }\n    }\n\n    /**\n     * Select original options at initialization of the component.\n     * They are never modified and are used to handle reset.\n     * @type {Array<HTMLOptionElement>}\n     */\n    this.originalOptions = deepCopy(Array.from(this.el.options).map(preserveOptgroupAsData));\n\n    /**\n     * Select original options at initialization of the component.\n     * They are updated based on select / unselect of options but no options are added or removed to it.\n     * This is the set of options passed to {@link FillSuggestions} callback.\n     * @type {Array<HTMLOptionElement>}\n     */\n    this.updatedOriginalOptions = deepCopy(this.originalOptions);\n\n    /**\n     * Select current options. These can be completely differents options than {@link originalOptions}\n     * if the provided promise fetches some from an API.\n     * @type {Array<HTMLOptionElement>}\n     */\n    this.currentOptions = deepCopy(this.originalOptions);\n\n    this._disable();\n    this.button = this._createButton();\n    this._setButtonText();\n    this.clearButton = this._createClearButton();\n    this.liveZone = this._createLiveZone();\n    this.overlay = this._createOverlay();\n    this.wrap = this._wrap();\n\n    if (this.multiple && this._options.showSelected) {\n      this.selectedList = this._createSelectedList();\n      this._updateSelectedList();\n\n      this.selectedList.addEventListener('click', this._removeOption);\n    }\n\n    this.button.addEventListener('click', this._handleOpener);\n    this.clearButton.addEventListener('click', this._handleClear);\n    this.wrap.addEventListener('keydown', this._handleKeyboard);\n    document.addEventListener('blur', this._handleFocus, true);\n\n    if (this.el.form) {\n      this.el.form.addEventListener('reset', this._handleReset);\n    }\n  }\n\n  /**\n   * Update texts with new texts\n   * @param {object} newText\n   */\n  setText(newText) {\n    Object.assign(this._options.text, newText);\n  }\n\n  /**\n   * Select new value\n   * @param {string} value option value\n   */\n  selectOption(value, dispatchEvent = true) {\n    const optionIndex = this.currentOptions.findIndex(option => option.value === value);\n    if (optionIndex === -1) {\n      return;\n    }\n    const shouldClose = this.multiple ? false : true;\n    this._toggleSelection(optionIndex, shouldClose, dispatchEvent);\n  }\n\n  /**\n   * Select new value without dispatching the change Event\n   * @param {string} value option value\n   */\n  selectOptionSilently(value) {\n    this.selectOption(value, SILENTLY);\n  }\n\n\n  _createButton() {\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.setAttribute('aria-expanded', this.open ? \"true\" : \"false\");\n    button.className = 'select-a11y-button';\n    const text = document.createElement('span');\n    text.className = 'select-a11y-button__text';\n\n    if (this.label && !this.label.id) {\n      this.label.id = `${this.el.id}-label`;\n    }\n    button.setAttribute('id', this.el.id + '-button');\n    button.setAttribute('aria-labelledby', this.label?.id + ' ' + button.id);\n    text.innerHTML = \"&nbsp;\";\n\n    button.appendChild(text);\n    button.insertAdjacentHTML('beforeend', '<span class=\"select-a11y-button__icon\" aria-hidden=\"true\"></span>');\n    return button;\n  }\n\n  _createClearButton() {\n    const clear = document.createElement('button');\n    clear.setAttribute('type', 'button');\n    clear.setAttribute('aria-label', this._options.text.clear);\n    clear.className = 'select-a11y-button__clear';\n    return clear;\n  }\n\n  _createLiveZone() {\n    const live = document.createElement('p');\n    live.setAttribute('aria-live', 'polite');\n    live.classList.add('sr-only');\n\n    return live;\n  }\n\n  _createOverlay() {\n    const container = document.createElement('div');\n    container.classList.add('select-a11y__overlay');\n\n    const suggestions = document.createElement('div');\n    suggestions.classList.add('select-a11y-suggestions');\n    suggestions.id = `a11y-${this.id}-suggestions`;\n\n    container.innerHTML = `\n      <p id=\"a11y-usage-${this.id}-js\" class=\"sr-only\">${this._options.text.help}</p>\n      <label for=\"a11y-${this.id}-js\" class=\"sr-only\">${this._options.text.placeholder}</label>\n      <input type=\"search\" id=\"a11y-${this.id}-js\" class=\"select-a11y__input ${this.el.className}\" autocomplete=\"off\" autocapitalize=\"off\" spellcheck=\"false\" placeholder=\"${this._options.text.placeholder}\" aria-describedby=\"a11y-usage-${this.id}-js\">\n    `;\n\n    container.appendChild(suggestions);\n\n    this.list = suggestions;\n    this.list.addEventListener('click', this._handleSuggestionClick);\n\n    /** @type {HTMLInputElement | null} */\n    this.input = container.querySelector('input');\n\n    if(this.input) {\n      this.input.addEventListener('input', this._handleInput);\n      this.input.addEventListener('focus', this._positionCursor, true);\n    }\n\n    return container;\n  }\n\n  _createSelectedList() {\n    const list = document.createElement('ul');\n    list.className = 'select-a11y__selected-list';\n\n    return list;\n  }\n\n  _disable() {\n    this.el.setAttribute('tabindex', '-1');\n  }\n\n  /**\n   *\n   * @typedef Suggestion\n   * @property {boolean} hidden - if suggestion is hidden\n   * @property {boolean} disabled - if suggestion is disabled\n   * @property {boolean} selected - if suggestion is selected\n   * @property {string} label - label shown\n   * @property {any} value - suggestion value\n   * @property {string} [image] - suggestion image\n   * @property {string} [alt] - suggestion image alt\n   * @property {string} [helper] - suggestion helper\n   * @property {string} [description] - suggestion description\n   * @property {boolean} [showIcon] - suggestion recommended\n   * @property {string} [group] - suggestion group\n   * @property {string} [link] - suggestion link\n   * @property {string} [linkText] - suggestion linkText\n   */\n\n  /**\n   *\n   * @param {HTMLOptionElement} option\n   * @returns {Suggestion} - a suggestion\n   */\n  _mapToSuggestion(option) {\n\n    return {\n      hidden: option.hidden,\n      disabled: option.disabled,\n      selected: option.hasAttribute('selected'),\n      label: option.label,\n      value: option.value,\n      image: option.dataset.image,\n      alt: option.dataset.alt,\n      helper: option.dataset.helper,\n      description: option.dataset.description,\n      showIcon: option.dataset.showIcon,\n      group: option.dataset.group,\n      link: option.dataset.link,\n      linkText: option.dataset.linkText\n    };\n  }\n\n  /**\n   *\n   * @param {Suggestion} suggestion\n   * @returns {HTMLOptionElement} - an option\n   */\n  _mapToOption(suggestion) {\n    const option = document.createElement('option');\n    option.label = suggestion.label;\n    option.value = suggestion.value;\n    if(suggestion.hidden) {\n      option.setAttribute('hidden', 'hidden');\n    }\n    if(suggestion.disabled) {\n      option.setAttribute('disabled', 'disabled');\n    }\n    if(suggestion.selected) {\n      option.setAttribute('selected', 'selected');\n    }\n    if(suggestion.image) {\n      option.dataset.image = suggestion.image;\n    }\n    if(suggestion.alt) {\n      option.dataset.alt = suggestion.alt;\n    }\n    if(suggestion.description) {\n      option.dataset.description = suggestion.description\n    }\n    if (suggestion.helper) {\n      option.dataset.helper = suggestion.helper\n    }\n    if (suggestion.showIcon) {\n      option.dataset.showIcon = suggestion.showIcon\n    }\n    if (suggestion.group) {\n      option.dataset.group = suggestion.group\n    }\n    if (suggestion.link) {\n      option.dataset.link = suggestion.link\n    }\n    if (suggestion.linkText) {\n      option.dataset.linkText = suggestion.linkText\n    }\n    return option;\n  }\n\n  /**\n   * @callback FillSuggestions\n   * @param {string} search - searched term\n   * @param {Array<HTMLOptionElement>} options - original select options\n   * @returns {Promise<Array<Suggestion>>} suggestions\n   */\n\n  /**\n   *\n   * @type {FillSuggestions}\n   */\n  _defaultSearch(search, options) {\n    const newOptions = options.filter(option => {\n      const text = option.label || option.value;\n      return text.toLocaleLowerCase().indexOf(search) !== -1;\n    }).map(this._mapToSuggestion);\n    return Promise.resolve(newOptions);\n  }\n\n  /**\n   *\n   * @returns {Promise<Array<Suggestion>>}\n   */\n  async _fillSuggestions() {\n    const search = this.search.toLowerCase();\n\n    // loop over the\n    const suggestions = await this._options.fillSuggestions(search, this.updatedOriginalOptions);\n    this.currentOptions = suggestions.map(this._mapToOption);\n    this.el.replaceChildren(...this._fillSelect(this.currentOptions));\n\n    const suggestionElements = suggestions\n      .map((suggestion, index) => {\n        const suggestionElement = document.createElement('div');\n        suggestionElement.setAttribute('role', 'option');\n        suggestionElement.setAttribute('tabindex', '0');\n        suggestionElement.setAttribute('data-index', index.toString());\n        if(suggestion.hidden) {\n          suggestionElement.setAttribute('data-hidden', \"hidden\");\n        }\n        if(suggestion.disabled) {\n          suggestionElement.setAttribute('data-disabled', \"disabled\");\n        }\n        suggestionElement.classList.add('select-a11y-suggestion');\n\n        const firstColumn = document.createElement('div');\n        firstColumn.classList.add('select-a11y-column');\n        suggestionElement.appendChild(firstColumn);\n\n        const labelElement = document.createElement('div');\n        labelElement.classList.add('select-a11y-suggestion__label');\n        labelElement.innerText = suggestion.label || suggestion.value;\n        firstColumn.appendChild(labelElement);\n\n        // check if the option is selected\n        if (suggestion.selected) {\n          suggestionElement.setAttribute('aria-selected', 'true');\n        }\n        if (suggestion.description) {\n          const descriptionElement = document.createElement('div');\n          descriptionElement.classList.add('select-a11y-suggestion__description');\n\n          if (suggestion.showIcon) {\n            descriptionElement.setAttribute('data-show-icon', 'true');\n          }\n\n          descriptionElement.innerText = suggestion.description;\n          firstColumn.appendChild(descriptionElement);\n        }\n        if (suggestion.helper) {\n          const secondColumn = document.createElement('div');\n          secondColumn.classList.add('column--right');\n          suggestionElement.appendChild(secondColumn);\n\n          const helperElement = document.createElement('code');\n          helperElement.classList.add('select-a11y-suggestion__helper');\n          helperElement.innerText = suggestion.helper;\n          secondColumn.appendChild(helperElement);\n        } else if (suggestion.link) {\n          const secondColumn = document.createElement('div');\n          secondColumn.classList.add('column--right');\n          suggestionElement.appendChild(secondColumn);\n\n          const linkElement = document.createElement('a');\n          linkElement.target = \"_blank\";\n          linkElement.innerText = suggestion.linkText;\n          linkElement.href = suggestion.link;\n          secondColumn.appendChild(linkElement);\n        }\n        if (suggestion.image) {\n          const image = document.createElement('img');\n          image.setAttribute('src', suggestion.image);\n          image.setAttribute('alt', suggestion.alt ? suggestion.alt : '');\n          image.classList.add('select-a11y-suggestion__image');\n          suggestionElement.prepend(image);\n        }\n        return { suggestionElement, group: suggestion.group };\n      })\n      .filter((suggestion) => !suggestion.suggestionElement.dataset.disabled && !suggestion.suggestionElement.dataset.hidden);\n\n    const noGroupedSuggestions = [];\n    const groupedSuggestions = {};\n\n    suggestionElements.forEach(({ suggestionElement, group }) => {\n      if (group) {\n        if (!groupedSuggestions[group]) {\n          const groupDiv = document.createElement('div');\n          groupDiv.setAttribute('role', 'group');\n          groupedSuggestions[group] = groupDiv;\n          const presentation = document.createElement('div')\n          presentation.setAttribute('role', 'presentation')\n          presentation.innerHTML = group;\n          groupDiv.appendChild(presentation);\n        }\n        groupedSuggestions[group].appendChild(suggestionElement);\n      } else {\n        noGroupedSuggestions.push(suggestionElement);\n      }\n    });\n\n    this.suggestions = suggestionElements.map(({ suggestionElement }) => suggestionElement);\n\n    if(this.list) {\n      if (!this.suggestions.length) {\n        this.list.innerHTML = `<p class=\"select-a11y__no-suggestion\">${this._options.text.noResult}</p>`;\n      } else {\n        const listBox = document.createElement('div');\n        listBox.setAttribute('role', 'listbox');\n\n        if (this.multiple) {\n          listBox.setAttribute('aria-multiselectable', 'true');\n        }\n\n        Object.values(noGroupedSuggestions).forEach((item) => {\n          listBox.appendChild(item);\n        });\n        Object.values(groupedSuggestions).forEach((group) => {\n          listBox.appendChild(group);\n        });\n        this.list.innerHTML = '';\n        this.list.appendChild(listBox);\n      }\n    }\n    this._setLiveZone();\n    return suggestions;\n  }\n\n  _fillSelect(options) {\n    const newOptions = [];\n\n    options.forEach((option) => {\n      const group = option.dataset.group;\n      if (group) {\n        const existingOptgroup = newOptions.find((opt) => opt.tagName === 'OPTGROUP' && opt.label === group);\n        if (!existingOptgroup) {\n          const optgroup = document.createElement('optgroup');\n          optgroup.label = group;\n          newOptions.push(optgroup)\n        }\n        newOptions[newOptions.length - 1].appendChild(option);\n      } else {\n        newOptions.push(option)\n      }\n    });\n    return newOptions;\n  }\n\n  _handleOpener(event) {\n    this._toggleOverlay();\n  }\n\n  _handleFocus() {\n    if (!this.open) {\n      return;\n    }\n\n    clearTimeout(this._focusTimeout);\n\n    this._focusTimeout = setTimeout(() => {\n      if (!this.overlay.contains(document.activeElement) && this.button !== document.activeElement) {\n        this._toggleOverlay(false, document.activeElement === document.body);\n      }\n      else if (document.activeElement === this.input) {\n        // reset the focus index\n        this.focusIndex = null;\n      }\n      else {\n        const optionIndex = this.suggestions.indexOf(/** @type HTMLElement */ (document.activeElement));\n\n        if (optionIndex !== -1) {\n          this.focusIndex = optionIndex;\n        }\n      }\n    }, 10);\n  }\n\n  _handleClear() {\n    this.el.value = \"\";\n    this._handleReset();\n  }\n\n  _handleReset() {\n    clearTimeout(this._resetTimeout);\n\n    this._resetTimeout = setTimeout(async () => {\n      this.search = '';\n      this.updatedOriginalOptions = deepCopy(this.originalOptions);\n      this.currentOptions = deepCopy(this.originalOptions);\n      await this._fillSuggestions();\n      this.el.dispatchEvent(new Event('change'));\n      this._setButtonText();\n      if (this.multiple && this._options.showSelected) {\n        this._updateSelectedList();\n      }\n    }, 10);\n  }\n\n  _handleSuggestionClick(event) {\n    const option = closest.call(event.target, '[role=\"option\"]');\n\n    if (!option) {\n      return;\n    }\n\n    const optionIndex = parseInt(option.getAttribute('data-index'), 10);\n    const shouldClose = this.multiple && event.metaKey ? false : true;\n\n    this._toggleSelection(optionIndex, shouldClose);\n  }\n\n  _handleInput() {\n    // prevent event firing on focus and blur\n    if (this.search === this.input?.value) {\n      return;\n    }\n\n    this.search = this.input?.value ?? \"\";\n    this._fillSuggestions();\n  }\n\n  _handleKeyboard(event) {\n    const option = closest.call(event.target, '[role=\"option\"]');\n    const input = closest.call(event.target, 'input');\n\n    if (event.keyCode === 27) {\n      this._toggleOverlay();\n      return;\n    }\n\n    if (input && event.keyCode === 13) {\n      event.preventDefault();\n      return;\n    }\n\n    if (event.keyCode === 40) {\n      event.preventDefault();\n      this._moveIndex(1);\n      return\n    }\n\n    if (!option) {\n      return;\n    }\n\n    if (event.keyCode === 39) {\n      event.preventDefault();\n      this._moveIndex(1);\n      return\n    }\n\n    if (event.keyCode === 37 || event.keyCode === 38) {\n      event.preventDefault();\n      this._moveIndex(-1);\n      return;\n    }\n\n    if ((!this.multiple && event.keyCode === 13) || event.keyCode === 32) {\n      event.preventDefault();\n      this._toggleSelection(parseInt(option.getAttribute('data-index'), 10), this.multiple ? false : true);\n    }\n\n    if (this.multiple && event.keyCode === 13) {\n      this._toggleOverlay();\n    }\n  }\n\n  _moveIndex(step) {\n    if (this.focusIndex === null) {\n      this.focusIndex = 0;\n    }\n    else {\n      const nextIndex = this.focusIndex + step;\n      const selectionItems = this.suggestions.length - 1;\n\n      if (nextIndex > selectionItems) {\n        this.focusIndex = 0;\n      }\n      else if (nextIndex < 0) {\n        this.focusIndex = selectionItems;\n      }\n      else {\n        this.focusIndex = nextIndex;\n      }\n    }\n\n    this.suggestions[this.focusIndex].focus();\n  }\n\n  _positionCursor() {\n    setTimeout(() => {\n      if(this.input) {\n        const endOfInput = this.input.value.length ?? 0;\n      this.input.setSelectionRange(endOfInput, endOfInput);\n      }\n    });\n  }\n\n  _removeOption(event) {\n    const button = closest.call(event.target, 'button');\n\n    if (!button) {\n      return;\n    }\n\n    const currentButtons = this.selectedList?.querySelectorAll('button');\n    const buttonPreviousIndex = Array.prototype.indexOf.call(currentButtons, button) - 1;\n    const optionIndex = parseInt(button.getAttribute('data-index'), 10);\n\n    // disable the option\n    this._toggleSelection(optionIndex);\n\n    // manage the focus if there's still the selected list\n    if (this.selectedList?.parentElement) {\n      const buttons = this.selectedList.querySelectorAll('button');\n\n      // look for the bouton before the one clicked\n      if (buttons[buttonPreviousIndex]) {\n        buttons[buttonPreviousIndex].focus();\n      }\n      // fallback to the first button in the list if there's none\n      else {\n        buttons[0].focus();\n      }\n    } else {\n      this.button.focus();\n    }\n  }\n\n  _setButtonText() {\n    const selectedOption = this.el.item(this.el.selectedIndex);\n    /** @type {HTMLElement} */\n    const child = this.button.firstElementChild;\n\n    if (selectedOption && selectedOption.value) {\n      this.button.classList.remove('select-a11y-button--no-selected-option');\n    } else {\n      this.button.classList.add('select-a11y-button--no-selected-option');\n    }\n\n    if (this.multiple) {\n      if(this._options.useLabelAsButton) {\n        child.innerText = this.label?.innerText || \"\";\n      } else {\n        child.innerHTML = \"&nbsp;\";\n      }\n    } else {\n      if (selectedOption) {\n        child.innerText = selectedOption.label || selectedOption.value;\n      }\n    }\n  }\n\n  _setLiveZone() {\n    const suggestions = this.suggestions.length;\n    let text = '';\n\n    if (this.open) {\n      if (!suggestions) {\n        text = this._options.text.noResult;\n      }\n      else {\n        text = this._options.text.results.replace('{x}', suggestions);\n      }\n    }\n\n    this.liveZone.innerText = text;\n  }\n\n  _toggleOverlay(state, focusBack) {\n    this.open = state !== undefined ? state : !this.open;\n    this.button.setAttribute('aria-expanded', this.open ? \"true\" : \"false\");\n\n    if (this.open) {\n      this._fillSuggestions();\n      this.button.insertAdjacentElement('afterend', this.overlay);\n      this.input?.focus();\n    }\n    else if (this.wrap.contains(this.overlay)) {\n      this.wrap.removeChild(this.overlay);\n\n      // reset the focus index\n      this.focusIndex = null;\n\n      // reset search values for default search\n      if (this.input && this._options.fillSuggestions === this._defaultSearch) {\n        this.input.value = '';\n      }\n      this.search = '';\n\n\n      // reset aria-live\n      this._setLiveZone();\n      if (state === undefined || focusBack) {\n        // fix bug that will trigger a click on the button when focusing directly\n        setTimeout(() => {\n          this.button.focus();\n        });\n      }\n    }\n  }\n\n  _toggleSelection(optionIndex, close = true, dispatch = true) {\n    const toggledOption = this.el.item(optionIndex);\n    if (this.multiple) {\n      if(toggledOption?.hasAttribute('selected')) {\n        toggledOption.removeAttribute('selected');\n      } else {\n        toggledOption?.setAttribute('selected', 'selected');\n      }\n    }\n    else {\n      toggledOption?.setAttribute('selected', 'selected');\n      this.el.selectedIndex = optionIndex;\n    }\n    this.updatedOriginalOptions = this.updatedOriginalOptions.map(option => {\n      if(option.value === toggledOption?.value) {\n        if(toggledOption.hasAttribute('selected')) {\n          option.setAttribute('selected', 'selected');\n        } else {\n          option.removeAttribute('selected');\n        }\n      }\n      if(!this.multiple && option.value !== toggledOption?.value) {\n        option.removeAttribute('selected');\n      }\n      return option;\n    });\n    this.currentOptions = this.currentOptions.map(option => {\n      if(option.value === toggledOption?.value) {\n        if(toggledOption.hasAttribute('selected')) {\n          option.setAttribute('selected', 'selected');\n        } else {\n          option.removeAttribute('selected');\n        }\n      }\n      if(!this.multiple && option.value !== toggledOption?.value) {\n        option.removeAttribute('selected');\n      }\n      return option;\n    });\n    this.suggestions = this.suggestions.map((suggestion) => {\n      const index = parseInt(suggestion.getAttribute('data-index') ?? \"\", 10);\n      const option = this.el.item(index);\n      if (option && option.selected) {\n        suggestion.setAttribute('aria-selected', 'true');\n      }\n      else {\n        suggestion.removeAttribute('aria-selected');\n      }\n      return suggestion;\n    });\n    if(dispatch) {\n      this.el.dispatchEvent(new Event('change'));\n    }\n    this._setButtonText();\n    if (this.multiple && this._options.showSelected) {\n      this._updateSelectedList();\n    }\n\n    if (close && this.open) {\n      this._toggleOverlay();\n    }\n  }\n\n  _updateSelectedList() {\n    const items = this.currentOptions.map((option, index) => {\n      if(!option.selected || option.hidden) {\n        return;\n      }\n      const text = option.label || option.value;\n\n      return `\n        <li class=\"select-a11y__selected-item\">\n          <span>${text}</span>\n          <button class=\"select-a11y-delete\" title=\"${this._options.text.deleteItem.replace('{t}', text)}\" type=\"button\" data-index=\"${index}\">\n            <span class=\"sr-only\">${this._options.text.delete}</span>\n            <span class=\"select-a11y-delete__icon\" aria-hidden=\"true\"></span>\n          </button>\n        </li>`;\n    }).filter(Boolean);\n\n    if(this.selectedList) {\n      this.selectedList.innerHTML = items.join('');\n\n      if (items.length) {\n        if (!this.selectedList?.parentElement) {\n          this.wrap.appendChild(this.selectedList);\n        }\n      } else if (this.selectedList.parentElement) {\n        this.wrap.removeChild(this.selectedList);\n      }\n    }\n  }\n\n  _wrap() {\n    const wrapper = document.createElement('div');\n    wrapper.classList.add('select-a11y');\n    this.el.parentElement?.appendChild(wrapper);\n\n    const tagHidden = document.createElement('div');\n    tagHidden.classList.add('select-a11y__hidden');\n    tagHidden.setAttribute('aria-hidden', 'true');\n\n    if (this._options.useLabelAsButton) {\n      tagHidden.appendChild(this.label);\n    }\n    tagHidden.appendChild(this.el);\n\n    wrapper.appendChild(tagHidden);\n    wrapper.appendChild(this.liveZone);\n    wrapper.appendChild(this.button);\n    if (this._options.clearable) {\n      wrapper.appendChild(this.clearButton);\n    }\n\n    return wrapper;\n  }\n}\n\nexport default Select;\n"],"names":["text","matches","closest","s","el","DEEP_CLONE","SILENTLY","deepCopy","array","option","preserveOptgroupAsData","Select","options","passedOptions","textOptions","hasSelectedOption","newText","value","dispatchEvent","optionIndex","shouldClose","button","clear","live","container","suggestions","list","suggestion","search","newOptions","suggestionElements","index","suggestionElement","firstColumn","labelElement","descriptionElement","secondColumn","helperElement","linkElement","image","noGroupedSuggestions","groupedSuggestions","group","groupDiv","presentation","listBox","item","opt","optgroup","event","input","step","nextIndex","selectionItems","endOfInput","currentButtons","buttonPreviousIndex","buttons","selectedOption","child","state","focusBack","close","dispatch","toggledOption","items","wrapper","tagHidden"],"mappings":"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"}